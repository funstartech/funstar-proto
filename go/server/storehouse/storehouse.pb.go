// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: storehouse.proto

package storehouse

import (
	common "github.com/funstartech/funstar-proto/go/common"
	delivery "github.com/funstartech/funstar-proto/go/server/delivery"
	wxpay "github.com/funstartech/funstar-proto/go/wxpay"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StoreProductStatus int32

const (
	StoreProductStatus_STORE_STATUS_UNPICK_UP StoreProductStatus = 0 // 未提货
	StoreProductStatus_STORE_STATUS_PICK_UP   StoreProductStatus = 1 //已提货
)

// Enum value maps for StoreProductStatus.
var (
	StoreProductStatus_name = map[int32]string{
		0: "STORE_STATUS_UNPICK_UP",
		1: "STORE_STATUS_PICK_UP",
	}
	StoreProductStatus_value = map[string]int32{
		"STORE_STATUS_UNPICK_UP": 0,
		"STORE_STATUS_PICK_UP":   1,
	}
)

func (x StoreProductStatus) Enum() *StoreProductStatus {
	p := new(StoreProductStatus)
	*p = x
	return p
}

func (x StoreProductStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoreProductStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_storehouse_proto_enumTypes[0].Descriptor()
}

func (StoreProductStatus) Type() protoreflect.EnumType {
	return &file_storehouse_proto_enumTypes[0]
}

func (x StoreProductStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoreProductStatus.Descriptor instead.
func (StoreProductStatus) EnumDescriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{0}
}

type PickUpOrderStatus int32

const (
	PickUpOrderStatus_PICKUP_ORDER_STATUS_WAIT_PAY     PickUpOrderStatus = 0 // 待支付
	PickUpOrderStatus_PICKUP_ORDER_STATUS_ORDER_PLACED PickUpOrderStatus = 1 // 待发货
	PickUpOrderStatus_PICKUP_ORDER_STATUS_CANCEL       PickUpOrderStatus = 2 // 已取消
	PickUpOrderStatus_PICKUP_ORDER_STATUS_DELIVERY     PickUpOrderStatus = 3 // 已发货
	PickUpOrderStatus_PICKUP_ORDER_STATUS_DELIVERED    PickUpOrderStatus = 4 // 已送达
)

// Enum value maps for PickUpOrderStatus.
var (
	PickUpOrderStatus_name = map[int32]string{
		0: "PICKUP_ORDER_STATUS_WAIT_PAY",
		1: "PICKUP_ORDER_STATUS_ORDER_PLACED",
		2: "PICKUP_ORDER_STATUS_CANCEL",
		3: "PICKUP_ORDER_STATUS_DELIVERY",
		4: "PICKUP_ORDER_STATUS_DELIVERED",
	}
	PickUpOrderStatus_value = map[string]int32{
		"PICKUP_ORDER_STATUS_WAIT_PAY":     0,
		"PICKUP_ORDER_STATUS_ORDER_PLACED": 1,
		"PICKUP_ORDER_STATUS_CANCEL":       2,
		"PICKUP_ORDER_STATUS_DELIVERY":     3,
		"PICKUP_ORDER_STATUS_DELIVERED":    4,
	}
)

func (x PickUpOrderStatus) Enum() *PickUpOrderStatus {
	p := new(PickUpOrderStatus)
	*p = x
	return p
}

func (x PickUpOrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PickUpOrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_storehouse_proto_enumTypes[1].Descriptor()
}

func (PickUpOrderStatus) Type() protoreflect.EnumType {
	return &file_storehouse_proto_enumTypes[1]
}

func (x PickUpOrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PickUpOrderStatus.Descriptor instead.
func (PickUpOrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{1}
}

type CancelRes int32

const (
	CancelRes_CANCEL_RES_OK             CancelRes = 0
	CancelRes_CANCEL_RES_NO_MATCH_ORDER CancelRes = 1 // 没有匹配订单（openid不匹配或者找不到订单号或者状态为已完成不可取消）
)

// Enum value maps for CancelRes.
var (
	CancelRes_name = map[int32]string{
		0: "CANCEL_RES_OK",
		1: "CANCEL_RES_NO_MATCH_ORDER",
	}
	CancelRes_value = map[string]int32{
		"CANCEL_RES_OK":             0,
		"CANCEL_RES_NO_MATCH_ORDER": 1,
	}
)

func (x CancelRes) Enum() *CancelRes {
	p := new(CancelRes)
	*p = x
	return p
}

func (x CancelRes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CancelRes) Descriptor() protoreflect.EnumDescriptor {
	return file_storehouse_proto_enumTypes[2].Descriptor()
}

func (CancelRes) Type() protoreflect.EnumType {
	return &file_storehouse_proto_enumTypes[2]
}

func (x CancelRes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CancelRes.Descriptor instead.
func (CancelRes) EnumDescriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{2}
}

type LevelUpRes int32

const (
	LevelUpRes_LEVEL_UP_OK               LevelUpRes = 0
	LevelUpRes_LEVEL_UP_ITEM_NOT_ENOUGH  LevelUpRes = 1 // 进阶需要商品不足
	LevelUpRes_LEVEL_UP_TARGET_NOT_FOUND LevelUpRes = 2 // 进阶目标不存在
)

// Enum value maps for LevelUpRes.
var (
	LevelUpRes_name = map[int32]string{
		0: "LEVEL_UP_OK",
		1: "LEVEL_UP_ITEM_NOT_ENOUGH",
		2: "LEVEL_UP_TARGET_NOT_FOUND",
	}
	LevelUpRes_value = map[string]int32{
		"LEVEL_UP_OK":               0,
		"LEVEL_UP_ITEM_NOT_ENOUGH":  1,
		"LEVEL_UP_TARGET_NOT_FOUND": 2,
	}
)

func (x LevelUpRes) Enum() *LevelUpRes {
	p := new(LevelUpRes)
	*p = x
	return p
}

func (x LevelUpRes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LevelUpRes) Descriptor() protoreflect.EnumDescriptor {
	return file_storehouse_proto_enumTypes[3].Descriptor()
}

func (LevelUpRes) Type() protoreflect.EnumType {
	return &file_storehouse_proto_enumTypes[3]
}

func (x LevelUpRes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LevelUpRes.Descriptor instead.
func (LevelUpRes) EnumDescriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{3}
}

type StoreProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId  uint64          `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Product  *common.Product `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
	UpdateTs int64           `protobuf:"varint,3,opt,name=update_ts,json=updateTs,proto3" json:"update_ts,omitempty"`
}

func (x *StoreProduct) Reset() {
	*x = StoreProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreProduct) ProtoMessage() {}

func (x *StoreProduct) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreProduct.ProtoReflect.Descriptor instead.
func (*StoreProduct) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{0}
}

func (x *StoreProduct) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *StoreProduct) GetProduct() *common.Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *StoreProduct) GetUpdateTs() int64 {
	if x != nil {
		return x.UpdateTs
	}
	return 0
}

type GetUserStoresReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanLevelUp bool   `protobuf:"varint,1,opt,name=can_level_up,json=canLevelUp,proto3" json:"can_level_up,omitempty"`
	Cookie     []byte `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
}

func (x *GetUserStoresReq) Reset() {
	*x = GetUserStoresReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserStoresReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserStoresReq) ProtoMessage() {}

func (x *GetUserStoresReq) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserStoresReq.ProtoReflect.Descriptor instead.
func (*GetUserStoresReq) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserStoresReq) GetCanLevelUp() bool {
	if x != nil {
		return x.CanLevelUp
	}
	return false
}

func (x *GetUserStoresReq) GetCookie() []byte {
	if x != nil {
		return x.Cookie
	}
	return nil
}

type GetUserStoresRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stores []*StoreProduct `protobuf:"bytes,1,rep,name=stores,proto3" json:"stores,omitempty"`
	Cookie []byte          `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
	IsEnd  bool            `protobuf:"varint,3,opt,name=is_end,json=isEnd,proto3" json:"is_end,omitempty"`
}

func (x *GetUserStoresRsp) Reset() {
	*x = GetUserStoresRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserStoresRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserStoresRsp) ProtoMessage() {}

func (x *GetUserStoresRsp) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserStoresRsp.ProtoReflect.Descriptor instead.
func (*GetUserStoresRsp) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserStoresRsp) GetStores() []*StoreProduct {
	if x != nil {
		return x.Stores
	}
	return nil
}

func (x *GetUserStoresRsp) GetCookie() []byte {
	if x != nil {
		return x.Cookie
	}
	return nil
}

func (x *GetUserStoresRsp) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

type PickUpOrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Basic  *PickUpOrderBasic  `protobuf:"bytes,1,opt,name=basic,proto3" json:"basic,omitempty"`
	Detail *PickUpOrderDetail `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *PickUpOrderInfo) Reset() {
	*x = PickUpOrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickUpOrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickUpOrderInfo) ProtoMessage() {}

func (x *PickUpOrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickUpOrderInfo.ProtoReflect.Descriptor instead.
func (*PickUpOrderInfo) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{3}
}

func (x *PickUpOrderInfo) GetBasic() *PickUpOrderBasic {
	if x != nil {
		return x.Basic
	}
	return nil
}

func (x *PickUpOrderInfo) GetDetail() *PickUpOrderDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type PickUpOrderBasic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime      int64  `protobuf:"varint,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ExpireTime      int64  `protobuf:"varint,3,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	Status          uint32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                           // 订单状态 PickUpOrderStatus
	TotalPrice      int32  `protobuf:"varint,5,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"` // (单位：分)
	Openid          string `protobuf:"bytes,6,opt,name=openid,proto3" json:"openid,omitempty"`
	StoreIds        string `protobuf:"bytes,7,opt,name=store_ids,json=storeIds,proto3" json:"store_ids,omitempty"`
	Pids            string `protobuf:"bytes,8,opt,name=pids,proto3" json:"pids,omitempty"`    // 商品列表
	Count           uint32 `protobuf:"varint,9,opt,name=count,proto3" json:"count,omitempty"` // 总数量
	WxTransactionId string `protobuf:"bytes,10,opt,name=wx_transaction_id,json=wxTransactionId,proto3" json:"wx_transaction_id,omitempty"`
	Receiver        string `protobuf:"bytes,20,opt,name=receiver,proto3" json:"receiver,omitempty"`                                   // 收货人
	Phone           string `protobuf:"bytes,21,opt,name=phone,proto3" json:"phone,omitempty"`                                         // 手机号
	District        string `protobuf:"bytes,22,opt,name=district,proto3" json:"district,omitempty"`                                   // 区域
	Address         string `protobuf:"bytes,23,opt,name=address,proto3" json:"address,omitempty"`                                     // 详细地址
	ShippingMethod  string `protobuf:"bytes,50,opt,name=shipping_method,json=shippingMethod,proto3" json:"shipping_method,omitempty"` // 物流公司
	ShippingNumber  string `protobuf:"bytes,51,opt,name=shipping_number,json=shippingNumber,proto3" json:"shipping_number,omitempty"` // 物流单号
}

func (x *PickUpOrderBasic) Reset() {
	*x = PickUpOrderBasic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickUpOrderBasic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickUpOrderBasic) ProtoMessage() {}

func (x *PickUpOrderBasic) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickUpOrderBasic.ProtoReflect.Descriptor instead.
func (*PickUpOrderBasic) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{4}
}

func (x *PickUpOrderBasic) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PickUpOrderBasic) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *PickUpOrderBasic) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *PickUpOrderBasic) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PickUpOrderBasic) GetTotalPrice() int32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *PickUpOrderBasic) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *PickUpOrderBasic) GetStoreIds() string {
	if x != nil {
		return x.StoreIds
	}
	return ""
}

func (x *PickUpOrderBasic) GetPids() string {
	if x != nil {
		return x.Pids
	}
	return ""
}

func (x *PickUpOrderBasic) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PickUpOrderBasic) GetWxTransactionId() string {
	if x != nil {
		return x.WxTransactionId
	}
	return ""
}

func (x *PickUpOrderBasic) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *PickUpOrderBasic) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *PickUpOrderBasic) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *PickUpOrderBasic) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PickUpOrderBasic) GetShippingMethod() string {
	if x != nil {
		return x.ShippingMethod
	}
	return ""
}

func (x *PickUpOrderBasic) GetShippingNumber() string {
	if x != nil {
		return x.ShippingNumber
	}
	return ""
}

type PickUpOrderDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*common.Product `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *PickUpOrderDetail) Reset() {
	*x = PickUpOrderDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickUpOrderDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickUpOrderDetail) ProtoMessage() {}

func (x *PickUpOrderDetail) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickUpOrderDetail.ProtoReflect.Descriptor instead.
func (*PickUpOrderDetail) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{5}
}

func (x *PickUpOrderDetail) GetProducts() []*common.Product {
	if x != nil {
		return x.Products
	}
	return nil
}

type CreatePickUpOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreIds  []uint64 `protobuf:"varint,1,rep,packed,name=store_ids,json=storeIds,proto3" json:"store_ids,omitempty"`
	AddressId uint64   `protobuf:"varint,2,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
}

func (x *CreatePickUpOrderReq) Reset() {
	*x = CreatePickUpOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePickUpOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePickUpOrderReq) ProtoMessage() {}

func (x *CreatePickUpOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePickUpOrderReq.ProtoReflect.Descriptor instead.
func (*CreatePickUpOrderReq) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePickUpOrderReq) GetStoreIds() []uint64 {
	if x != nil {
		return x.StoreIds
	}
	return nil
}

func (x *CreatePickUpOrderReq) GetAddressId() uint64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

type CreatePickUpOrderRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderInfo    *PickUpOrderInfo `protobuf:"bytes,1,opt,name=order_info,json=orderInfo,proto3" json:"order_info,omitempty"`
	Payment      *wxpay.WxPayment `protobuf:"bytes,2,opt,name=payment,proto3" json:"payment,omitempty"`
	FreeShipping bool             `protobuf:"varint,3,opt,name=free_shipping,json=freeShipping,proto3" json:"free_shipping,omitempty"`
}

func (x *CreatePickUpOrderRsp) Reset() {
	*x = CreatePickUpOrderRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePickUpOrderRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePickUpOrderRsp) ProtoMessage() {}

func (x *CreatePickUpOrderRsp) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePickUpOrderRsp.ProtoReflect.Descriptor instead.
func (*CreatePickUpOrderRsp) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{7}
}

func (x *CreatePickUpOrderRsp) GetOrderInfo() *PickUpOrderInfo {
	if x != nil {
		return x.OrderInfo
	}
	return nil
}

func (x *CreatePickUpOrderRsp) GetPayment() *wxpay.WxPayment {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *CreatePickUpOrderRsp) GetFreeShipping() bool {
	if x != nil {
		return x.FreeShipping
	}
	return false
}

type GetUserPickUpOrdersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookie []byte `protobuf:"bytes,1,opt,name=cookie,proto3" json:"cookie,omitempty"`
}

func (x *GetUserPickUpOrdersReq) Reset() {
	*x = GetUserPickUpOrdersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPickUpOrdersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPickUpOrdersReq) ProtoMessage() {}

func (x *GetUserPickUpOrdersReq) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPickUpOrdersReq.ProtoReflect.Descriptor instead.
func (*GetUserPickUpOrdersReq) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserPickUpOrdersReq) GetCookie() []byte {
	if x != nil {
		return x.Cookie
	}
	return nil
}

type GetUserPickUpOrdersRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*PickUpOrderInfo `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	Cookie []byte             `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
	IsEnd  bool               `protobuf:"varint,3,opt,name=is_end,json=isEnd,proto3" json:"is_end,omitempty"`
}

func (x *GetUserPickUpOrdersRsp) Reset() {
	*x = GetUserPickUpOrdersRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPickUpOrdersRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPickUpOrdersRsp) ProtoMessage() {}

func (x *GetUserPickUpOrdersRsp) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPickUpOrdersRsp.ProtoReflect.Descriptor instead.
func (*GetUserPickUpOrdersRsp) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserPickUpOrdersRsp) GetOrders() []*PickUpOrderInfo {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *GetUserPickUpOrdersRsp) GetCookie() []byte {
	if x != nil {
		return x.Cookie
	}
	return nil
}

func (x *GetUserPickUpOrdersRsp) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

type CancelPickUpOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PickupId uint64 `protobuf:"varint,1,opt,name=pickup_id,json=pickupId,proto3" json:"pickup_id,omitempty"`
}

func (x *CancelPickUpOrderReq) Reset() {
	*x = CancelPickUpOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPickUpOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPickUpOrderReq) ProtoMessage() {}

func (x *CancelPickUpOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPickUpOrderReq.ProtoReflect.Descriptor instead.
func (*CancelPickUpOrderReq) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{10}
}

func (x *CancelPickUpOrderReq) GetPickupId() uint64 {
	if x != nil {
		return x.PickupId
	}
	return 0
}

type CancelPickUpOrderRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Res uint32 `protobuf:"varint,1,opt,name=res,proto3" json:"res,omitempty"` // CancelRes
}

func (x *CancelPickUpOrderRsp) Reset() {
	*x = CancelPickUpOrderRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPickUpOrderRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPickUpOrderRsp) ProtoMessage() {}

func (x *CancelPickUpOrderRsp) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPickUpOrderRsp.ProtoReflect.Descriptor instead.
func (*CancelPickUpOrderRsp) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{11}
}

func (x *CancelPickUpOrderRsp) GetRes() uint32 {
	if x != nil {
		return x.Res
	}
	return 0
}

type GetDeliveryInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PickupId uint64 `protobuf:"varint,1,opt,name=pickup_id,json=pickupId,proto3" json:"pickup_id,omitempty"`
}

func (x *GetDeliveryInfoReq) Reset() {
	*x = GetDeliveryInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeliveryInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeliveryInfoReq) ProtoMessage() {}

func (x *GetDeliveryInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeliveryInfoReq.ProtoReflect.Descriptor instead.
func (*GetDeliveryInfoReq) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{12}
}

func (x *GetDeliveryInfoReq) GetPickupId() uint64 {
	if x != nil {
		return x.PickupId
	}
	return 0
}

type GetDeliveryInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*delivery.PickUpDeliveryInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *GetDeliveryInfoRsp) Reset() {
	*x = GetDeliveryInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeliveryInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeliveryInfoRsp) ProtoMessage() {}

func (x *GetDeliveryInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeliveryInfoRsp.ProtoReflect.Descriptor instead.
func (*GetDeliveryInfoRsp) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{13}
}

func (x *GetDeliveryInfoRsp) GetInfos() []*delivery.PickUpDeliveryInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetLevelUpPoolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLevelUpPoolReq) Reset() {
	*x = GetLevelUpPoolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLevelUpPoolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLevelUpPoolReq) ProtoMessage() {}

func (x *GetLevelUpPoolReq) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLevelUpPoolReq.ProtoReflect.Descriptor instead.
func (*GetLevelUpPoolReq) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{14}
}

type LevelUpTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product   *common.Product `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	NeedCount uint32          `protobuf:"varint,2,opt,name=need_count,json=needCount,proto3" json:"need_count,omitempty"` // 进阶需要数量
}

func (x *LevelUpTarget) Reset() {
	*x = LevelUpTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelUpTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelUpTarget) ProtoMessage() {}

func (x *LevelUpTarget) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelUpTarget.ProtoReflect.Descriptor instead.
func (*LevelUpTarget) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{15}
}

func (x *LevelUpTarget) GetProduct() *common.Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *LevelUpTarget) GetNeedCount() uint32 {
	if x != nil {
		return x.NeedCount
	}
	return 0
}

type GetLevelUpPoolRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets []*LevelUpTarget `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
}

func (x *GetLevelUpPoolRsp) Reset() {
	*x = GetLevelUpPoolRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLevelUpPoolRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLevelUpPoolRsp) ProtoMessage() {}

func (x *GetLevelUpPoolRsp) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLevelUpPoolRsp.ProtoReflect.Descriptor instead.
func (*GetLevelUpPoolRsp) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{16}
}

func (x *GetLevelUpPoolRsp) GetTargets() []*LevelUpTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

type LevelUpItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId uint64 `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Count   uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *LevelUpItem) Reset() {
	*x = LevelUpItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelUpItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelUpItem) ProtoMessage() {}

func (x *LevelUpItem) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelUpItem.ProtoReflect.Descriptor instead.
func (*LevelUpItem) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{17}
}

func (x *LevelUpItem) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *LevelUpItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type LevelUpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*LevelUpItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *LevelUpReq) Reset() {
	*x = LevelUpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelUpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelUpReq) ProtoMessage() {}

func (x *LevelUpReq) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelUpReq.ProtoReflect.Descriptor instead.
func (*LevelUpReq) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{18}
}

func (x *LevelUpReq) GetItems() []*LevelUpItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type LevelUpRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Res uint32 `protobuf:"varint,1,opt,name=res,proto3" json:"res,omitempty"`
}

func (x *LevelUpRsp) Reset() {
	*x = LevelUpRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storehouse_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelUpRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelUpRsp) ProtoMessage() {}

func (x *LevelUpRsp) ProtoReflect() protoreflect.Message {
	mi := &file_storehouse_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelUpRsp.ProtoReflect.Descriptor instead.
func (*LevelUpRsp) Descriptor() ([]byte, []int) {
	return file_storehouse_proto_rawDescGZIP(), []int{19}
}

func (x *LevelUpRsp) GetRes() uint32 {
	if x != nil {
		return x.Res
	}
	return 0
}

var File_storehouse_proto protoreflect.FileDescriptor

var file_storehouse_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x19, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x1a, 0x0b, 0x77,
	0x78, 0x70, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x73, 0x22, 0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x5f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63,
	0x61, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x06, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x0f, 0x50, 0x69, 0x63, 0x6b, 0x55,
	0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x05, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x75, 0x6e, 0x73,
	0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x12, 0x44, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0xe2, 0x03, 0x0a, 0x10, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x64, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x78, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77,
	0x78, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x11, 0x50, 0x69, 0x63, 0x6b,
	0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x33, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x22, 0x52, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x6b,
	0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12,
	0x49, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e,
	0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x75,
	0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x77, 0x78, 0x70, 0x61, 0x79, 0x2e, 0x57, 0x78, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69,
	0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x42, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x50, 0x69, 0x63,
	0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x69, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73,
	0x45, 0x6e, 0x64, 0x22, 0x33, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x69, 0x63,
	0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x72,
	0x65, 0x73, 0x22, 0x31, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x05, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x75, 0x6e,
	0x73, 0x74, 0x61, 0x72, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x69,
	0x63, 0x6b, 0x55, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x55, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x22, 0x61, 0x0a, 0x0d,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x31, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x57, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0x3e, 0x0a, 0x0b, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x55, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x0a, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x55, 0x70, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x1e, 0x0a, 0x0a, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x52,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x72, 0x65, 0x73, 0x2a, 0x4a, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54,
	0x4f, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x50, 0x49, 0x43,
	0x4b, 0x5f, 0x55, 0x50, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x49, 0x43, 0x4b, 0x5f, 0x55, 0x50, 0x10, 0x01,
	0x2a, 0xc0, 0x01, 0x0a, 0x11, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x49, 0x43, 0x4b, 0x55, 0x50,
	0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x57, 0x41,
	0x49, 0x54, 0x5f, 0x50, 0x41, 0x59, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x50, 0x49, 0x43, 0x4b,
	0x55, 0x50, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1e,
	0x0a, 0x1a, 0x50, 0x49, 0x43, 0x4b, 0x55, 0x50, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x02, 0x12, 0x20,
	0x0a, 0x1c, 0x50, 0x49, 0x43, 0x4b, 0x55, 0x50, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x10, 0x03,
	0x12, 0x21, 0x0a, 0x1d, 0x50, 0x49, 0x43, 0x4b, 0x55, 0x50, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45,
	0x44, 0x10, 0x04, 0x2a, 0x3d, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x12, 0x11, 0x0a, 0x0d, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x5f, 0x52, 0x45, 0x53, 0x5f, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x5f, 0x52, 0x45,
	0x53, 0x5f, 0x4e, 0x4f, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x10, 0x01, 0x2a, 0x5a, 0x0a, 0x0a, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x52, 0x65, 0x73,
	0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x5f, 0x4f, 0x4b, 0x10,
	0x00, 0x12, 0x1c, 0x0a, 0x18, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x5f, 0x49, 0x54,
	0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x10, 0x01, 0x12,
	0x1d, 0x0a, 0x19, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x5f, 0x54, 0x41, 0x52, 0x47,
	0x45, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x32, 0xf0,
	0x06, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x76, 0x72,
	0x12, 0x69, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x73, 0x12, 0x2b, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2b,
	0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x75, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x2f, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x2f, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x73, 0x70, 0x12, 0x7b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x63,
	0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x31, 0x2e, 0x66, 0x75, 0x6e, 0x73,
	0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x63,
	0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x66,
	0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x73, 0x70, 0x12,
	0x75, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x2e, 0x66, 0x75, 0x6e, 0x73,
	0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74,
	0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0d, 0x57, 0x78, 0x50, 0x61, 0x79,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1f, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74,
	0x61, 0x72, 0x2e, 0x77, 0x78, 0x70, 0x61, 0x79, 0x2e, 0x57, 0x78, 0x50, 0x61, 0x79, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x66, 0x75, 0x6e, 0x73,
	0x74, 0x61, 0x72, 0x2e, 0x77, 0x78, 0x70, 0x61, 0x79, 0x2e, 0x57, 0x78, 0x50, 0x61, 0x79, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x2c, 0x2e, 0x66,
	0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x55, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x66, 0x75, 0x6e,
	0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55,
	0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x07, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x55, 0x70, 0x12, 0x25, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x66, 0x75, 0x6e,
	0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x52, 0x73,
	0x70, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x66, 0x75, 0x6e, 0x73,
	0x74, 0x61, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_storehouse_proto_rawDescOnce sync.Once
	file_storehouse_proto_rawDescData = file_storehouse_proto_rawDesc
)

func file_storehouse_proto_rawDescGZIP() []byte {
	file_storehouse_proto_rawDescOnce.Do(func() {
		file_storehouse_proto_rawDescData = protoimpl.X.CompressGZIP(file_storehouse_proto_rawDescData)
	})
	return file_storehouse_proto_rawDescData
}

var file_storehouse_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_storehouse_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_storehouse_proto_goTypes = []interface{}{
	(StoreProductStatus)(0),             // 0: funstar.server.storehouse.StoreProductStatus
	(PickUpOrderStatus)(0),              // 1: funstar.server.storehouse.PickUpOrderStatus
	(CancelRes)(0),                      // 2: funstar.server.storehouse.CancelRes
	(LevelUpRes)(0),                     // 3: funstar.server.storehouse.LevelUpRes
	(*StoreProduct)(nil),                // 4: funstar.server.storehouse.StoreProduct
	(*GetUserStoresReq)(nil),            // 5: funstar.server.storehouse.GetUserStoresReq
	(*GetUserStoresRsp)(nil),            // 6: funstar.server.storehouse.GetUserStoresRsp
	(*PickUpOrderInfo)(nil),             // 7: funstar.server.storehouse.PickUpOrderInfo
	(*PickUpOrderBasic)(nil),            // 8: funstar.server.storehouse.PickUpOrderBasic
	(*PickUpOrderDetail)(nil),           // 9: funstar.server.storehouse.PickUpOrderDetail
	(*CreatePickUpOrderReq)(nil),        // 10: funstar.server.storehouse.CreatePickUpOrderReq
	(*CreatePickUpOrderRsp)(nil),        // 11: funstar.server.storehouse.CreatePickUpOrderRsp
	(*GetUserPickUpOrdersReq)(nil),      // 12: funstar.server.storehouse.GetUserPickUpOrdersReq
	(*GetUserPickUpOrdersRsp)(nil),      // 13: funstar.server.storehouse.GetUserPickUpOrdersRsp
	(*CancelPickUpOrderReq)(nil),        // 14: funstar.server.storehouse.CancelPickUpOrderReq
	(*CancelPickUpOrderRsp)(nil),        // 15: funstar.server.storehouse.CancelPickUpOrderRsp
	(*GetDeliveryInfoReq)(nil),          // 16: funstar.server.storehouse.GetDeliveryInfoReq
	(*GetDeliveryInfoRsp)(nil),          // 17: funstar.server.storehouse.GetDeliveryInfoRsp
	(*GetLevelUpPoolReq)(nil),           // 18: funstar.server.storehouse.GetLevelUpPoolReq
	(*LevelUpTarget)(nil),               // 19: funstar.server.storehouse.LevelUpTarget
	(*GetLevelUpPoolRsp)(nil),           // 20: funstar.server.storehouse.GetLevelUpPoolRsp
	(*LevelUpItem)(nil),                 // 21: funstar.server.storehouse.LevelUpItem
	(*LevelUpReq)(nil),                  // 22: funstar.server.storehouse.LevelUpReq
	(*LevelUpRsp)(nil),                  // 23: funstar.server.storehouse.LevelUpRsp
	(*common.Product)(nil),              // 24: funstar.common.Product
	(*wxpay.WxPayment)(nil),             // 25: funstar.wxpay.WxPayment
	(*delivery.PickUpDeliveryInfo)(nil), // 26: funstar.delivery.PickUpDeliveryInfo
	(*wxpay.WxPayCallbackReq)(nil),      // 27: funstar.wxpay.WxPayCallbackReq
	(*wxpay.WxPayCallbackRsp)(nil),      // 28: funstar.wxpay.WxPayCallbackRsp
}
var file_storehouse_proto_depIdxs = []int32{
	24, // 0: funstar.server.storehouse.StoreProduct.product:type_name -> funstar.common.Product
	4,  // 1: funstar.server.storehouse.GetUserStoresRsp.stores:type_name -> funstar.server.storehouse.StoreProduct
	8,  // 2: funstar.server.storehouse.PickUpOrderInfo.basic:type_name -> funstar.server.storehouse.PickUpOrderBasic
	9,  // 3: funstar.server.storehouse.PickUpOrderInfo.detail:type_name -> funstar.server.storehouse.PickUpOrderDetail
	24, // 4: funstar.server.storehouse.PickUpOrderDetail.products:type_name -> funstar.common.Product
	7,  // 5: funstar.server.storehouse.CreatePickUpOrderRsp.order_info:type_name -> funstar.server.storehouse.PickUpOrderInfo
	25, // 6: funstar.server.storehouse.CreatePickUpOrderRsp.payment:type_name -> funstar.wxpay.WxPayment
	7,  // 7: funstar.server.storehouse.GetUserPickUpOrdersRsp.orders:type_name -> funstar.server.storehouse.PickUpOrderInfo
	26, // 8: funstar.server.storehouse.GetDeliveryInfoRsp.infos:type_name -> funstar.delivery.PickUpDeliveryInfo
	24, // 9: funstar.server.storehouse.LevelUpTarget.product:type_name -> funstar.common.Product
	19, // 10: funstar.server.storehouse.GetLevelUpPoolRsp.targets:type_name -> funstar.server.storehouse.LevelUpTarget
	21, // 11: funstar.server.storehouse.LevelUpReq.items:type_name -> funstar.server.storehouse.LevelUpItem
	5,  // 12: funstar.server.storehouse.StorehouseSvr.GetUserStores:input_type -> funstar.server.storehouse.GetUserStoresReq
	10, // 13: funstar.server.storehouse.StorehouseSvr.CreatePickUpOrder:input_type -> funstar.server.storehouse.CreatePickUpOrderReq
	12, // 14: funstar.server.storehouse.StorehouseSvr.GetUserPickUpOrders:input_type -> funstar.server.storehouse.GetUserPickUpOrdersReq
	14, // 15: funstar.server.storehouse.StorehouseSvr.CancelPickUpOrder:input_type -> funstar.server.storehouse.CancelPickUpOrderReq
	16, // 16: funstar.server.storehouse.StorehouseSvr.GetDeliveryInfo:input_type -> funstar.server.storehouse.GetDeliveryInfoReq
	27, // 17: funstar.server.storehouse.StorehouseSvr.WxPayCallback:input_type -> funstar.wxpay.WxPayCallbackReq
	18, // 18: funstar.server.storehouse.StorehouseSvr.GetLevelUpPool:input_type -> funstar.server.storehouse.GetLevelUpPoolReq
	22, // 19: funstar.server.storehouse.StorehouseSvr.LevelUp:input_type -> funstar.server.storehouse.LevelUpReq
	6,  // 20: funstar.server.storehouse.StorehouseSvr.GetUserStores:output_type -> funstar.server.storehouse.GetUserStoresRsp
	11, // 21: funstar.server.storehouse.StorehouseSvr.CreatePickUpOrder:output_type -> funstar.server.storehouse.CreatePickUpOrderRsp
	13, // 22: funstar.server.storehouse.StorehouseSvr.GetUserPickUpOrders:output_type -> funstar.server.storehouse.GetUserPickUpOrdersRsp
	15, // 23: funstar.server.storehouse.StorehouseSvr.CancelPickUpOrder:output_type -> funstar.server.storehouse.CancelPickUpOrderRsp
	17, // 24: funstar.server.storehouse.StorehouseSvr.GetDeliveryInfo:output_type -> funstar.server.storehouse.GetDeliveryInfoRsp
	28, // 25: funstar.server.storehouse.StorehouseSvr.WxPayCallback:output_type -> funstar.wxpay.WxPayCallbackRsp
	20, // 26: funstar.server.storehouse.StorehouseSvr.GetLevelUpPool:output_type -> funstar.server.storehouse.GetLevelUpPoolRsp
	23, // 27: funstar.server.storehouse.StorehouseSvr.LevelUp:output_type -> funstar.server.storehouse.LevelUpRsp
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_storehouse_proto_init() }
func file_storehouse_proto_init() {
	if File_storehouse_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_storehouse_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserStoresReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserStoresRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickUpOrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickUpOrderBasic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickUpOrderDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePickUpOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePickUpOrderRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPickUpOrdersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPickUpOrdersRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPickUpOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPickUpOrderRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeliveryInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeliveryInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLevelUpPoolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelUpTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLevelUpPoolRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelUpItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelUpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storehouse_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelUpRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_storehouse_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_storehouse_proto_goTypes,
		DependencyIndexes: file_storehouse_proto_depIdxs,
		EnumInfos:         file_storehouse_proto_enumTypes,
		MessageInfos:      file_storehouse_proto_msgTypes,
	}.Build()
	File_storehouse_proto = out.File
	file_storehouse_proto_rawDesc = nil
	file_storehouse_proto_goTypes = nil
	file_storehouse_proto_depIdxs = nil
}
