// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: userinfo.proto

package userinfo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StardustRecordType int32

const (
	StardustRecordType_STARDUST_RECORD_TYPE_UNKNOWN StardustRecordType = 0
	StardustRecordType_STARDUST_RECORD_TYPE_INCOME  StardustRecordType = 1 // 收入
	StardustRecordType_STARDUST_RECORD_TYPE_EXPENSE StardustRecordType = 2 // 支出
)

// Enum value maps for StardustRecordType.
var (
	StardustRecordType_name = map[int32]string{
		0: "STARDUST_RECORD_TYPE_UNKNOWN",
		1: "STARDUST_RECORD_TYPE_INCOME",
		2: "STARDUST_RECORD_TYPE_EXPENSE",
	}
	StardustRecordType_value = map[string]int32{
		"STARDUST_RECORD_TYPE_UNKNOWN": 0,
		"STARDUST_RECORD_TYPE_INCOME":  1,
		"STARDUST_RECORD_TYPE_EXPENSE": 2,
	}
)

func (x StardustRecordType) Enum() *StardustRecordType {
	p := new(StardustRecordType)
	*p = x
	return p
}

func (x StardustRecordType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StardustRecordType) Descriptor() protoreflect.EnumDescriptor {
	return file_userinfo_proto_enumTypes[0].Descriptor()
}

func (StardustRecordType) Type() protoreflect.EnumType {
	return &file_userinfo_proto_enumTypes[0]
}

func (x StardustRecordType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StardustRecordType.Descriptor instead.
func (StardustRecordType) EnumDescriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{0}
}

type StardustSource int32

const (
	StardustSource_STARDUST_SOURCE_UNKNOWN       StardustSource = 0
	StardustSource_STARDUST_SOURCE_DECOMPOSE     StardustSource = 1  // 分解
	StardustSource_STARDUST_SOURCE_LOTTERY_ORDER StardustSource = 10 // 抽奖订单消费
)

// Enum value maps for StardustSource.
var (
	StardustSource_name = map[int32]string{
		0:  "STARDUST_SOURCE_UNKNOWN",
		1:  "STARDUST_SOURCE_DECOMPOSE",
		10: "STARDUST_SOURCE_LOTTERY_ORDER",
	}
	StardustSource_value = map[string]int32{
		"STARDUST_SOURCE_UNKNOWN":       0,
		"STARDUST_SOURCE_DECOMPOSE":     1,
		"STARDUST_SOURCE_LOTTERY_ORDER": 10,
	}
)

func (x StardustSource) Enum() *StardustSource {
	p := new(StardustSource)
	*p = x
	return p
}

func (x StardustSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StardustSource) Descriptor() protoreflect.EnumDescriptor {
	return file_userinfo_proto_enumTypes[1].Descriptor()
}

func (StardustSource) Type() protoreflect.EnumType {
	return &file_userinfo_proto_enumTypes[1]
}

func (x StardustSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StardustSource.Descriptor instead.
func (StardustSource) EnumDescriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{1}
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid        string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	Avatar        string `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Nickname      string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	PaidCount     uint32 `protobuf:"varint,10,opt,name=paid_count,json=paidCount,proto3" json:"paid_count,omitempty"`    // 已付款单数
	PaidAmount    int64  `protobuf:"varint,11,opt,name=paid_amount,json=paidAmount,proto3" json:"paid_amount,omitempty"` // 已付款金额（分）
	ShareKey      string `protobuf:"bytes,12,opt,name=share_key,json=shareKey,proto3" json:"share_key,omitempty"`        // 绑定分销码
	DistributorId string `protobuf:"bytes,13,opt,name=distributor_id,json=distributorId,proto3" json:"distributor_id,omitempty"`
	Stardust      uint64 `protobuf:"varint,14,opt,name=stardust,proto3" json:"stardust,omitempty"`                             // 星尘
	RegisterTime  int64  `protobuf:"varint,20,opt,name=register_time,json=registerTime,proto3" json:"register_time,omitempty"` // 注册时间
	LastPayTime   int64  `protobuf:"varint,21,opt,name=last_pay_time,json=lastPayTime,proto3" json:"last_pay_time,omitempty"`  // 上次付款时间
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{0}
}

func (x *UserInfo) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *UserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfo) GetPaidCount() uint32 {
	if x != nil {
		return x.PaidCount
	}
	return 0
}

func (x *UserInfo) GetPaidAmount() int64 {
	if x != nil {
		return x.PaidAmount
	}
	return 0
}

func (x *UserInfo) GetShareKey() string {
	if x != nil {
		return x.ShareKey
	}
	return ""
}

func (x *UserInfo) GetDistributorId() string {
	if x != nil {
		return x.DistributorId
	}
	return ""
}

func (x *UserInfo) GetStardust() uint64 {
	if x != nil {
		return x.Stardust
	}
	return 0
}

func (x *UserInfo) GetRegisterTime() int64 {
	if x != nil {
		return x.RegisterTime
	}
	return 0
}

func (x *UserInfo) GetLastPayTime() int64 {
	if x != nil {
		return x.LastPayTime
	}
	return 0
}

type GetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareKey string `protobuf:"bytes,1,opt,name=share_key,json=shareKey,proto3" json:"share_key,omitempty"`
}

func (x *GetUserInfoReq) Reset() {
	*x = GetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReq) ProtoMessage() {}

func (x *GetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserInfoReq) GetShareKey() string {
	if x != nil {
		return x.ShareKey
	}
	return ""
}

type GetUserInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userinfo *UserInfo `protobuf:"bytes,1,opt,name=userinfo,proto3" json:"userinfo,omitempty"`
}

func (x *GetUserInfoRsp) Reset() {
	*x = GetUserInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoRsp) ProtoMessage() {}

func (x *GetUserInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoRsp.ProtoReflect.Descriptor instead.
func (*GetUserInfoRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserInfoRsp) GetUserinfo() *UserInfo {
	if x != nil {
		return x.Userinfo
	}
	return nil
}

type BatchGetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openids []string `protobuf:"bytes,1,rep,name=openids,proto3" json:"openids,omitempty"`
}

func (x *BatchGetUserInfoReq) Reset() {
	*x = BatchGetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUserInfoReq) ProtoMessage() {}

func (x *BatchGetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUserInfoReq.ProtoReflect.Descriptor instead.
func (*BatchGetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{3}
}

func (x *BatchGetUserInfoReq) GetOpenids() []string {
	if x != nil {
		return x.Openids
	}
	return nil
}

type BatchGetUserInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userinfos []*UserInfo `protobuf:"bytes,1,rep,name=userinfos,proto3" json:"userinfos,omitempty"`
}

func (x *BatchGetUserInfoRsp) Reset() {
	*x = BatchGetUserInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetUserInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUserInfoRsp) ProtoMessage() {}

func (x *BatchGetUserInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUserInfoRsp.ProtoReflect.Descriptor instead.
func (*BatchGetUserInfoRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{4}
}

func (x *BatchGetUserInfoRsp) GetUserinfos() []*UserInfo {
	if x != nil {
		return x.Userinfos
	}
	return nil
}

type UpdateUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User           *UserInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UpdateAvatar   bool      `protobuf:"varint,11,opt,name=update_avatar,json=updateAvatar,proto3" json:"update_avatar,omitempty"`
	UpdateNickname bool      `protobuf:"varint,12,opt,name=update_nickname,json=updateNickname,proto3" json:"update_nickname,omitempty"`
}

func (x *UpdateUserInfoReq) Reset() {
	*x = UpdateUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoReq) ProtoMessage() {}

func (x *UpdateUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateUserInfoReq) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UpdateUserInfoReq) GetUpdateAvatar() bool {
	if x != nil {
		return x.UpdateAvatar
	}
	return false
}

func (x *UpdateUserInfoReq) GetUpdateNickname() bool {
	if x != nil {
		return x.UpdateNickname
	}
	return false
}

type UpdateUserInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserInfoRsp) Reset() {
	*x = UpdateUserInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoRsp) ProtoMessage() {}

func (x *UpdateUserInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoRsp.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{6}
}

type UpdatePaymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count         uint32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Payment       int64  `protobuf:"varint,2,opt,name=payment,proto3" json:"payment,omitempty"`
	ShareKey      string `protobuf:"bytes,3,opt,name=share_key,json=shareKey,proto3" json:"share_key,omitempty"`
	DistributorId string `protobuf:"bytes,4,opt,name=distributor_id,json=distributorId,proto3" json:"distributor_id,omitempty"`
	PayTime       int64  `protobuf:"varint,5,opt,name=pay_time,json=payTime,proto3" json:"pay_time,omitempty"`
}

func (x *UpdatePaymentReq) Reset() {
	*x = UpdatePaymentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentReq) ProtoMessage() {}

func (x *UpdatePaymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentReq.ProtoReflect.Descriptor instead.
func (*UpdatePaymentReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePaymentReq) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UpdatePaymentReq) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *UpdatePaymentReq) GetShareKey() string {
	if x != nil {
		return x.ShareKey
	}
	return ""
}

func (x *UpdatePaymentReq) GetDistributorId() string {
	if x != nil {
		return x.DistributorId
	}
	return ""
}

func (x *UpdatePaymentReq) GetPayTime() int64 {
	if x != nil {
		return x.PayTime
	}
	return 0
}

type UpdatePaymentRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePaymentRsp) Reset() {
	*x = UpdatePaymentRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentRsp) ProtoMessage() {}

func (x *UpdatePaymentRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentRsp.ProtoReflect.Descriptor instead.
func (*UpdatePaymentRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{8}
}

type RemShareKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemShareKeyReq) Reset() {
	*x = RemShareKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemShareKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemShareKeyReq) ProtoMessage() {}

func (x *RemShareKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemShareKeyReq.ProtoReflect.Descriptor instead.
func (*RemShareKeyReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{9}
}

type RemShareKeyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemShareKeyRsp) Reset() {
	*x = RemShareKeyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemShareKeyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemShareKeyRsp) ProtoMessage() {}

func (x *RemShareKeyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemShareKeyRsp.ProtoReflect.Descriptor instead.
func (*RemShareKeyRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{10}
}

type UserAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Openid    string `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	Receiver  string `protobuf:"bytes,10,opt,name=receiver,proto3" json:"receiver,omitempty"`                     // 收货人
	Phone     string `protobuf:"bytes,11,opt,name=phone,proto3" json:"phone,omitempty"`                           // 手机号
	District  string `protobuf:"bytes,12,opt,name=district,proto3" json:"district,omitempty"`                     // 区域
	Address   string `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`                       // 详细地址
	IsDefault bool   `protobuf:"varint,20,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"` // 是否是默认地址
	UpdateTs  int64  `protobuf:"varint,21,opt,name=update_ts,json=updateTs,proto3" json:"update_ts,omitempty"`    // 更新时间
}

func (x *UserAddress) Reset() {
	*x = UserAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddress) ProtoMessage() {}

func (x *UserAddress) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddress.ProtoReflect.Descriptor instead.
func (*UserAddress) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{11}
}

func (x *UserAddress) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserAddress) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *UserAddress) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *UserAddress) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserAddress) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *UserAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserAddress) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *UserAddress) GetUpdateTs() int64 {
	if x != nil {
		return x.UpdateTs
	}
	return 0
}

type GetAddressListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAddressListReq) Reset() {
	*x = GetAddressListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressListReq) ProtoMessage() {}

func (x *GetAddressListReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressListReq.ProtoReflect.Descriptor instead.
func (*GetAddressListReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{12}
}

type GetAddressListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressList []*UserAddress `protobuf:"bytes,1,rep,name=address_list,json=addressList,proto3" json:"address_list,omitempty"`
}

func (x *GetAddressListRsp) Reset() {
	*x = GetAddressListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressListRsp) ProtoMessage() {}

func (x *GetAddressListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressListRsp.ProtoReflect.Descriptor instead.
func (*GetAddressListRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{13}
}

func (x *GetAddressListRsp) GetAddressList() []*UserAddress {
	if x != nil {
		return x.AddressList
	}
	return nil
}

type GetDefaultAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDefaultAddressReq) Reset() {
	*x = GetDefaultAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultAddressReq) ProtoMessage() {}

func (x *GetDefaultAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultAddressReq.ProtoReflect.Descriptor instead.
func (*GetDefaultAddressReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{14}
}

type GetDefaultAddressRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *UserAddress `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetDefaultAddressRsp) Reset() {
	*x = GetDefaultAddressRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultAddressRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultAddressRsp) ProtoMessage() {}

func (x *GetDefaultAddressRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultAddressRsp.ProtoReflect.Descriptor instead.
func (*GetDefaultAddressRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{15}
}

func (x *GetDefaultAddressRsp) GetAddress() *UserAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

type SetDefaultAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressId uint64 `protobuf:"varint,1,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
}

func (x *SetDefaultAddressReq) Reset() {
	*x = SetDefaultAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDefaultAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultAddressReq) ProtoMessage() {}

func (x *SetDefaultAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultAddressReq.ProtoReflect.Descriptor instead.
func (*SetDefaultAddressReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{16}
}

func (x *SetDefaultAddressReq) GetAddressId() uint64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

type SetDefaultAddressRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDefaultAddressRsp) Reset() {
	*x = SetDefaultAddressRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDefaultAddressRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultAddressRsp) ProtoMessage() {}

func (x *SetDefaultAddressRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultAddressRsp.ProtoReflect.Descriptor instead.
func (*SetDefaultAddressRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{17}
}

type GetAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressId uint64 `protobuf:"varint,1,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
}

func (x *GetAddressReq) Reset() {
	*x = GetAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressReq) ProtoMessage() {}

func (x *GetAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressReq.ProtoReflect.Descriptor instead.
func (*GetAddressReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{18}
}

func (x *GetAddressReq) GetAddressId() uint64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

type GetAddressRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *UserAddress `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAddressRsp) Reset() {
	*x = GetAddressRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressRsp) ProtoMessage() {}

func (x *GetAddressRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressRsp.ProtoReflect.Descriptor instead.
func (*GetAddressRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{19}
}

func (x *GetAddressRsp) GetAddress() *UserAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

type AddAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *UserAddress `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // 只需要填收货人、手机号、区域、地址、是否默认
}

func (x *AddAddressReq) Reset() {
	*x = AddAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAddressReq) ProtoMessage() {}

func (x *AddAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAddressReq.ProtoReflect.Descriptor instead.
func (*AddAddressReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{20}
}

func (x *AddAddressReq) GetAddress() *UserAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

type AddAddressRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddAddressRsp) Reset() {
	*x = AddAddressRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAddressRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAddressRsp) ProtoMessage() {}

func (x *AddAddressRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAddressRsp.ProtoReflect.Descriptor instead.
func (*AddAddressRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{21}
}

type UpdateAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *UserAddress `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *UpdateAddressReq) Reset() {
	*x = UpdateAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddressReq) ProtoMessage() {}

func (x *UpdateAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddressReq.ProtoReflect.Descriptor instead.
func (*UpdateAddressReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateAddressReq) GetAddress() *UserAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

type UpdateAddressRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAddressRsp) Reset() {
	*x = UpdateAddressRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddressRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddressRsp) ProtoMessage() {}

func (x *UpdateAddressRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddressRsp.ProtoReflect.Descriptor instead.
func (*UpdateAddressRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{23}
}

type RemAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressId uint64 `protobuf:"varint,1,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
}

func (x *RemAddressReq) Reset() {
	*x = RemAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemAddressReq) ProtoMessage() {}

func (x *RemAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemAddressReq.ProtoReflect.Descriptor instead.
func (*RemAddressReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{24}
}

func (x *RemAddressReq) GetAddressId() uint64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

type RemAddressRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemAddressRsp) Reset() {
	*x = RemAddressRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemAddressRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemAddressRsp) ProtoMessage() {}

func (x *RemAddressRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemAddressRsp.ProtoReflect.Descriptor instead.
func (*RemAddressRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{25}
}

type AddStardustReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stardust int32  `protobuf:"varint,1,opt,name=stardust,proto3" json:"stardust,omitempty"`
	Source   uint32 `protobuf:"varint,2,opt,name=source,proto3" json:"source,omitempty"` // 来源 StardustSource
}

func (x *AddStardustReq) Reset() {
	*x = AddStardustReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStardustReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStardustReq) ProtoMessage() {}

func (x *AddStardustReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStardustReq.ProtoReflect.Descriptor instead.
func (*AddStardustReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{26}
}

func (x *AddStardustReq) GetStardust() int32 {
	if x != nil {
		return x.Stardust
	}
	return 0
}

func (x *AddStardustReq) GetSource() uint32 {
	if x != nil {
		return x.Source
	}
	return 0
}

type AddStardustRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddStardustRsp) Reset() {
	*x = AddStardustRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStardustRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStardustRsp) ProtoMessage() {}

func (x *AddStardustRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStardustRsp.ProtoReflect.Descriptor instead.
func (*AddStardustRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{27}
}

type GetStardustReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStardustReq) Reset() {
	*x = GetStardustReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStardustReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStardustReq) ProtoMessage() {}

func (x *GetStardustReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStardustReq.ProtoReflect.Descriptor instead.
func (*GetStardustReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{28}
}

type GetStardustRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StardustAvailable uint64 `protobuf:"varint,1,opt,name=stardust_available,json=stardustAvailable,proto3" json:"stardust_available,omitempty"` // 可用
	StardustFreeze    uint64 `protobuf:"varint,2,opt,name=stardust_freeze,json=stardustFreeze,proto3" json:"stardust_freeze,omitempty"`          // 冻结
}

func (x *GetStardustRsp) Reset() {
	*x = GetStardustRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStardustRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStardustRsp) ProtoMessage() {}

func (x *GetStardustRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStardustRsp.ProtoReflect.Descriptor instead.
func (*GetStardustRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{29}
}

func (x *GetStardustRsp) GetStardustAvailable() uint64 {
	if x != nil {
		return x.StardustAvailable
	}
	return 0
}

func (x *GetStardustRsp) GetStardustFreeze() uint64 {
	if x != nil {
		return x.StardustFreeze
	}
	return 0
}

type StardustRecordBasic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime int64  `protobuf:"varint,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Source     uint32 `protobuf:"varint,3,opt,name=source,proto3" json:"source,omitempty"`
	Stardust   int32  `protobuf:"varint,4,opt,name=stardust,proto3" json:"stardust,omitempty"`
	// 收入字段
	DecomposeCount uint32 `protobuf:"varint,10,opt,name=decompose_count,json=decomposeCount,proto3" json:"decompose_count,omitempty"` // 分解数量
	// 支出字段
	OrderId uint64 `protobuf:"varint,20,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单编号
}

func (x *StardustRecordBasic) Reset() {
	*x = StardustRecordBasic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StardustRecordBasic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StardustRecordBasic) ProtoMessage() {}

func (x *StardustRecordBasic) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StardustRecordBasic.ProtoReflect.Descriptor instead.
func (*StardustRecordBasic) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{30}
}

func (x *StardustRecordBasic) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StardustRecordBasic) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *StardustRecordBasic) GetSource() uint32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *StardustRecordBasic) GetStardust() int32 {
	if x != nil {
		return x.Stardust
	}
	return 0
}

func (x *StardustRecordBasic) GetDecomposeCount() uint32 {
	if x != nil {
		return x.DecomposeCount
	}
	return 0
}

func (x *StardustRecordBasic) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type GetStardustRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordType uint32 `protobuf:"varint,1,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"` // StardustRecordType
	Cookie     []byte `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
}

func (x *GetStardustRecordReq) Reset() {
	*x = GetStardustRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStardustRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStardustRecordReq) ProtoMessage() {}

func (x *GetStardustRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStardustRecordReq.ProtoReflect.Descriptor instead.
func (*GetStardustRecordReq) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{31}
}

func (x *GetStardustRecordReq) GetRecordType() uint32 {
	if x != nil {
		return x.RecordType
	}
	return 0
}

func (x *GetStardustRecordReq) GetCookie() []byte {
	if x != nil {
		return x.Cookie
	}
	return nil
}

type GetStardustRecordRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*StardustRecordBasic `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Cookie  []byte                 `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
	IsEnd   bool                   `protobuf:"varint,3,opt,name=is_end,json=isEnd,proto3" json:"is_end,omitempty"`
}

func (x *GetStardustRecordRsp) Reset() {
	*x = GetStardustRecordRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userinfo_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStardustRecordRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStardustRecordRsp) ProtoMessage() {}

func (x *GetStardustRecordRsp) ProtoReflect() protoreflect.Message {
	mi := &file_userinfo_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStardustRecordRsp.ProtoReflect.Descriptor instead.
func (*GetStardustRecordRsp) Descriptor() ([]byte, []int) {
	return file_userinfo_proto_rawDescGZIP(), []int{32}
}

func (x *GetStardustRecordRsp) GetRecords() []*StardustRecordBasic {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *GetStardustRecordRsp) GetCookie() []byte {
	if x != nil {
		return x.Cookie
	}
	return nil
}

func (x *GetStardustRecordRsp) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

var File_userinfo_proto protoreflect.FileDescriptor

var file_userinfo_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x17, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xbf, 0x02, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x64, 0x75,
	0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x64, 0x75,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x4f, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x2f, 0x0a, 0x13, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x73, 0x22, 0x56, 0x0a, 0x13,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74,
	0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x73, 0x70, 0x22, 0xa1, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x22, 0x10, 0x0a, 0x0e,
	0x52, 0x65, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x22, 0x10,
	0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x73, 0x70,
	0x22, 0xd9, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x73, 0x22, 0x13, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x22, 0x5c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66,
	0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x22, 0x56, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12,
	0x3e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x35, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x22, 0x2e,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x4f,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12,
	0x3e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x4f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x3e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x0f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x73,
	0x70, 0x22, 0x52, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x22, 0x2e, 0x0a, 0x0d, 0x52, 0x65, 0x6d,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x6d,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x22, 0x44, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x10, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x52,
	0x73, 0x70, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x22, 0x68, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x64,
	0x75, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x64, 0x75,
	0x73, 0x74, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73,
	0x74, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x73, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x22, 0xbe,
	0x01, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64,
	0x65, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x64, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x4f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x22, 0x8d, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x07, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x75, 0x6e,
	0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64,
	0x2a, 0x79, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54, 0x41, 0x52, 0x44, 0x55,
	0x53, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x52,
	0x44, 0x55, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54, 0x41,
	0x52, 0x44, 0x55, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x45, 0x58, 0x50, 0x45, 0x4e, 0x53, 0x45, 0x10, 0x02, 0x2a, 0x6f, 0x0a, 0x0e, 0x53,
	0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x17, 0x53, 0x54, 0x41, 0x52, 0x44, 0x55, 0x53, 0x54, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54,
	0x41, 0x52, 0x44, 0x55, 0x53, 0x54, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x44, 0x45,
	0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x53, 0x45, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x54, 0x41,
	0x52, 0x44, 0x55, 0x53, 0x54, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4c, 0x4f, 0x54,
	0x54, 0x45, 0x52, 0x59, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x0a, 0x32, 0x96, 0x0c, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x76, 0x72, 0x12, 0x5f, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e, 0x66, 0x75,
	0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x6e, 0x0a,
	0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2c, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x2c, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x68, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2a, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x66, 0x75,
	0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74,
	0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x5f,
	0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x2e,
	0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x52, 0x65, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x73, 0x70, 0x12,
	0x68, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2a, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e,
	0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x71, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2d,
	0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e,
	0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12, 0x71, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x2d, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x2d, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12,
	0x5c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x2e,
	0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12, 0x5c, 0x0a,
	0x0a, 0x41, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x2e, 0x66, 0x75,
	0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x64,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x2e, 0x66,
	0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x73, 0x70, 0x12, 0x5c, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x26, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74,
	0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x5f, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x12,
	0x27, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61,
	0x72, 0x64, 0x75, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74,
	0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x5f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74,
	0x12, 0x27, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x66, 0x75, 0x6e, 0x73,
	0x74, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x71, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2d, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x64, 0x75, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x73, 0x70, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x63, 0x68, 0x2f,
	0x66, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_userinfo_proto_rawDescOnce sync.Once
	file_userinfo_proto_rawDescData = file_userinfo_proto_rawDesc
)

func file_userinfo_proto_rawDescGZIP() []byte {
	file_userinfo_proto_rawDescOnce.Do(func() {
		file_userinfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_userinfo_proto_rawDescData)
	})
	return file_userinfo_proto_rawDescData
}

var file_userinfo_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_userinfo_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_userinfo_proto_goTypes = []interface{}{
	(StardustRecordType)(0),      // 0: funstar.server.userinfo.StardustRecordType
	(StardustSource)(0),          // 1: funstar.server.userinfo.StardustSource
	(*UserInfo)(nil),             // 2: funstar.server.userinfo.UserInfo
	(*GetUserInfoReq)(nil),       // 3: funstar.server.userinfo.GetUserInfoReq
	(*GetUserInfoRsp)(nil),       // 4: funstar.server.userinfo.GetUserInfoRsp
	(*BatchGetUserInfoReq)(nil),  // 5: funstar.server.userinfo.BatchGetUserInfoReq
	(*BatchGetUserInfoRsp)(nil),  // 6: funstar.server.userinfo.BatchGetUserInfoRsp
	(*UpdateUserInfoReq)(nil),    // 7: funstar.server.userinfo.UpdateUserInfoReq
	(*UpdateUserInfoRsp)(nil),    // 8: funstar.server.userinfo.UpdateUserInfoRsp
	(*UpdatePaymentReq)(nil),     // 9: funstar.server.userinfo.UpdatePaymentReq
	(*UpdatePaymentRsp)(nil),     // 10: funstar.server.userinfo.UpdatePaymentRsp
	(*RemShareKeyReq)(nil),       // 11: funstar.server.userinfo.RemShareKeyReq
	(*RemShareKeyRsp)(nil),       // 12: funstar.server.userinfo.RemShareKeyRsp
	(*UserAddress)(nil),          // 13: funstar.server.userinfo.UserAddress
	(*GetAddressListReq)(nil),    // 14: funstar.server.userinfo.GetAddressListReq
	(*GetAddressListRsp)(nil),    // 15: funstar.server.userinfo.GetAddressListRsp
	(*GetDefaultAddressReq)(nil), // 16: funstar.server.userinfo.GetDefaultAddressReq
	(*GetDefaultAddressRsp)(nil), // 17: funstar.server.userinfo.GetDefaultAddressRsp
	(*SetDefaultAddressReq)(nil), // 18: funstar.server.userinfo.SetDefaultAddressReq
	(*SetDefaultAddressRsp)(nil), // 19: funstar.server.userinfo.SetDefaultAddressRsp
	(*GetAddressReq)(nil),        // 20: funstar.server.userinfo.GetAddressReq
	(*GetAddressRsp)(nil),        // 21: funstar.server.userinfo.GetAddressRsp
	(*AddAddressReq)(nil),        // 22: funstar.server.userinfo.AddAddressReq
	(*AddAddressRsp)(nil),        // 23: funstar.server.userinfo.AddAddressRsp
	(*UpdateAddressReq)(nil),     // 24: funstar.server.userinfo.UpdateAddressReq
	(*UpdateAddressRsp)(nil),     // 25: funstar.server.userinfo.UpdateAddressRsp
	(*RemAddressReq)(nil),        // 26: funstar.server.userinfo.RemAddressReq
	(*RemAddressRsp)(nil),        // 27: funstar.server.userinfo.RemAddressRsp
	(*AddStardustReq)(nil),       // 28: funstar.server.userinfo.AddStardustReq
	(*AddStardustRsp)(nil),       // 29: funstar.server.userinfo.AddStardustRsp
	(*GetStardustReq)(nil),       // 30: funstar.server.userinfo.GetStardustReq
	(*GetStardustRsp)(nil),       // 31: funstar.server.userinfo.GetStardustRsp
	(*StardustRecordBasic)(nil),  // 32: funstar.server.userinfo.StardustRecordBasic
	(*GetStardustRecordReq)(nil), // 33: funstar.server.userinfo.GetStardustRecordReq
	(*GetStardustRecordRsp)(nil), // 34: funstar.server.userinfo.GetStardustRecordRsp
}
var file_userinfo_proto_depIdxs = []int32{
	2,  // 0: funstar.server.userinfo.GetUserInfoRsp.userinfo:type_name -> funstar.server.userinfo.UserInfo
	2,  // 1: funstar.server.userinfo.BatchGetUserInfoRsp.userinfos:type_name -> funstar.server.userinfo.UserInfo
	2,  // 2: funstar.server.userinfo.UpdateUserInfoReq.user:type_name -> funstar.server.userinfo.UserInfo
	13, // 3: funstar.server.userinfo.GetAddressListRsp.address_list:type_name -> funstar.server.userinfo.UserAddress
	13, // 4: funstar.server.userinfo.GetDefaultAddressRsp.address:type_name -> funstar.server.userinfo.UserAddress
	13, // 5: funstar.server.userinfo.GetAddressRsp.address:type_name -> funstar.server.userinfo.UserAddress
	13, // 6: funstar.server.userinfo.AddAddressReq.address:type_name -> funstar.server.userinfo.UserAddress
	13, // 7: funstar.server.userinfo.UpdateAddressReq.address:type_name -> funstar.server.userinfo.UserAddress
	32, // 8: funstar.server.userinfo.GetStardustRecordRsp.records:type_name -> funstar.server.userinfo.StardustRecordBasic
	3,  // 9: funstar.server.userinfo.UserInfoSvr.GetUserInfo:input_type -> funstar.server.userinfo.GetUserInfoReq
	5,  // 10: funstar.server.userinfo.UserInfoSvr.BatchGetUserInfo:input_type -> funstar.server.userinfo.BatchGetUserInfoReq
	7,  // 11: funstar.server.userinfo.UserInfoSvr.UpdateUserInfo:input_type -> funstar.server.userinfo.UpdateUserInfoReq
	9,  // 12: funstar.server.userinfo.UserInfoSvr.UpdatePayment:input_type -> funstar.server.userinfo.UpdatePaymentReq
	11, // 13: funstar.server.userinfo.UserInfoSvr.RemShareKey:input_type -> funstar.server.userinfo.RemShareKeyReq
	14, // 14: funstar.server.userinfo.UserInfoSvr.GetAddressList:input_type -> funstar.server.userinfo.GetAddressListReq
	16, // 15: funstar.server.userinfo.UserInfoSvr.GetDefaultAddress:input_type -> funstar.server.userinfo.GetDefaultAddressReq
	18, // 16: funstar.server.userinfo.UserInfoSvr.SetDefaultAddress:input_type -> funstar.server.userinfo.SetDefaultAddressReq
	20, // 17: funstar.server.userinfo.UserInfoSvr.GetAddress:input_type -> funstar.server.userinfo.GetAddressReq
	22, // 18: funstar.server.userinfo.UserInfoSvr.AddAddress:input_type -> funstar.server.userinfo.AddAddressReq
	24, // 19: funstar.server.userinfo.UserInfoSvr.UpdateAddress:input_type -> funstar.server.userinfo.UpdateAddressReq
	26, // 20: funstar.server.userinfo.UserInfoSvr.RemAddress:input_type -> funstar.server.userinfo.RemAddressReq
	28, // 21: funstar.server.userinfo.UserInfoSvr.AddStardust:input_type -> funstar.server.userinfo.AddStardustReq
	30, // 22: funstar.server.userinfo.UserInfoSvr.GetStardust:input_type -> funstar.server.userinfo.GetStardustReq
	33, // 23: funstar.server.userinfo.UserInfoSvr.GetStardustRecord:input_type -> funstar.server.userinfo.GetStardustRecordReq
	4,  // 24: funstar.server.userinfo.UserInfoSvr.GetUserInfo:output_type -> funstar.server.userinfo.GetUserInfoRsp
	6,  // 25: funstar.server.userinfo.UserInfoSvr.BatchGetUserInfo:output_type -> funstar.server.userinfo.BatchGetUserInfoRsp
	8,  // 26: funstar.server.userinfo.UserInfoSvr.UpdateUserInfo:output_type -> funstar.server.userinfo.UpdateUserInfoRsp
	10, // 27: funstar.server.userinfo.UserInfoSvr.UpdatePayment:output_type -> funstar.server.userinfo.UpdatePaymentRsp
	12, // 28: funstar.server.userinfo.UserInfoSvr.RemShareKey:output_type -> funstar.server.userinfo.RemShareKeyRsp
	15, // 29: funstar.server.userinfo.UserInfoSvr.GetAddressList:output_type -> funstar.server.userinfo.GetAddressListRsp
	17, // 30: funstar.server.userinfo.UserInfoSvr.GetDefaultAddress:output_type -> funstar.server.userinfo.GetDefaultAddressRsp
	19, // 31: funstar.server.userinfo.UserInfoSvr.SetDefaultAddress:output_type -> funstar.server.userinfo.SetDefaultAddressRsp
	21, // 32: funstar.server.userinfo.UserInfoSvr.GetAddress:output_type -> funstar.server.userinfo.GetAddressRsp
	23, // 33: funstar.server.userinfo.UserInfoSvr.AddAddress:output_type -> funstar.server.userinfo.AddAddressRsp
	25, // 34: funstar.server.userinfo.UserInfoSvr.UpdateAddress:output_type -> funstar.server.userinfo.UpdateAddressRsp
	27, // 35: funstar.server.userinfo.UserInfoSvr.RemAddress:output_type -> funstar.server.userinfo.RemAddressRsp
	29, // 36: funstar.server.userinfo.UserInfoSvr.AddStardust:output_type -> funstar.server.userinfo.AddStardustRsp
	31, // 37: funstar.server.userinfo.UserInfoSvr.GetStardust:output_type -> funstar.server.userinfo.GetStardustRsp
	34, // 38: funstar.server.userinfo.UserInfoSvr.GetStardustRecord:output_type -> funstar.server.userinfo.GetStardustRecordRsp
	24, // [24:39] is the sub-list for method output_type
	9,  // [9:24] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_userinfo_proto_init() }
func file_userinfo_proto_init() {
	if File_userinfo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_userinfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetUserInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaymentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaymentRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemShareKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemShareKeyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultAddressRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDefaultAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDefaultAddressRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAddressRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddressRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemAddressRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStardustReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStardustRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStardustReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStardustRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StardustRecordBasic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStardustRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userinfo_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStardustRecordRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_userinfo_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_userinfo_proto_goTypes,
		DependencyIndexes: file_userinfo_proto_depIdxs,
		EnumInfos:         file_userinfo_proto_enumTypes,
		MessageInfos:      file_userinfo_proto_msgTypes,
	}.Build()
	File_userinfo_proto = out.File
	file_userinfo_proto_rawDesc = nil
	file_userinfo_proto_goTypes = nil
	file_userinfo_proto_depIdxs = nil
}
