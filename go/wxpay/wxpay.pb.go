// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: wxpay.proto

package wxpay

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WxPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	TimeStamp string `protobuf:"bytes,2,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	NonceStr  string `protobuf:"bytes,3,opt,name=nonceStr,proto3" json:"nonceStr,omitempty"`
	Package   string `protobuf:"bytes,4,opt,name=package,proto3" json:"package,omitempty"`
	SignType  string `protobuf:"bytes,5,opt,name=signType,proto3" json:"signType,omitempty"`
	PaySign   string `protobuf:"bytes,6,opt,name=paySign,proto3" json:"paySign,omitempty"`
}

func (x *WxPayment) Reset() {
	*x = WxPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxpay_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxPayment) ProtoMessage() {}

func (x *WxPayment) ProtoReflect() protoreflect.Message {
	mi := &file_wxpay_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxPayment.ProtoReflect.Descriptor instead.
func (*WxPayment) Descriptor() ([]byte, []int) {
	return file_wxpay_proto_rawDescGZIP(), []int{0}
}

func (x *WxPayment) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WxPayment) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *WxPayment) GetNonceStr() string {
	if x != nil {
		return x.NonceStr
	}
	return ""
}

func (x *WxPayment) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *WxPayment) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *WxPayment) GetPaySign() string {
	if x != nil {
		return x.PaySign
	}
	return ""
}

// https://developers.weixin.qq.com/miniprogram/dev/wxcloudrun/src/development/pay/callback/
type WxPayCallbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid              string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	MchId              string `protobuf:"bytes,2,opt,name=mchId,proto3" json:"mchId,omitempty"`
	DeviceInfo         string `protobuf:"bytes,3,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
	NonceStr           string `protobuf:"bytes,4,opt,name=nonceStr,proto3" json:"nonceStr,omitempty"`
	Sign               string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	SignType           string `protobuf:"bytes,6,opt,name=signType,proto3" json:"signType,omitempty"`
	ResultCode         string `protobuf:"bytes,7,opt,name=resultCode,proto3" json:"resultCode,omitempty"`
	ErrCode            string `protobuf:"bytes,8,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrCodeDes         string `protobuf:"bytes,9,opt,name=errCodeDes,proto3" json:"errCodeDes,omitempty"`
	Openid             string `protobuf:"bytes,10,opt,name=openid,proto3" json:"openid,omitempty"`
	IsSubscribe        string `protobuf:"bytes,11,opt,name=isSubscribe,proto3" json:"isSubscribe,omitempty"`
	TradeType          string `protobuf:"bytes,12,opt,name=tradeType,proto3" json:"tradeType,omitempty"`
	BankType           string `protobuf:"bytes,13,opt,name=bankType,proto3" json:"bankType,omitempty"`
	TotalFee           int32  `protobuf:"varint,14,opt,name=totalFee,proto3" json:"totalFee,omitempty"`
	SettlementTotalFee int32  `protobuf:"varint,15,opt,name=settlementTotalFee,proto3" json:"settlementTotalFee,omitempty"`
	FeeType            string `protobuf:"bytes,16,opt,name=feeType,proto3" json:"feeType,omitempty"`
	CashFee            int32  `protobuf:"varint,17,opt,name=cashFee,proto3" json:"cashFee,omitempty"`
	CashFeeType        string `protobuf:"bytes,18,opt,name=cashFeeType,proto3" json:"cashFeeType,omitempty"`
	CouponFee          int32  `protobuf:"varint,19,opt,name=couponFee,proto3" json:"couponFee,omitempty"`
	CouponCount        int32  `protobuf:"varint,20,opt,name=couponCount,proto3" json:"couponCount,omitempty"`
	TransactionId      string `protobuf:"bytes,21,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	OutTradeNo         string `protobuf:"bytes,22,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	Attach             string `protobuf:"bytes,23,opt,name=attach,proto3" json:"attach,omitempty"`
	TimeEnd            string `protobuf:"bytes,24,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`
	SubAppid           string `protobuf:"bytes,50,opt,name=subAppid,proto3" json:"subAppid,omitempty"`
	SubMchId           string `protobuf:"bytes,51,opt,name=subMchId,proto3" json:"subMchId,omitempty"`
	SubOpenid          string `protobuf:"bytes,52,opt,name=subOpenid,proto3" json:"subOpenid,omitempty"`
	SubIsSubscribe     string `protobuf:"bytes,53,opt,name=subIsSubscribe,proto3" json:"subIsSubscribe,omitempty"`
	ReturnCode         string `protobuf:"bytes,101,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
	ReturnMsg          string `protobuf:"bytes,102,opt,name=returnMsg,proto3" json:"returnMsg,omitempty"`
}

func (x *WxPayCallbackReq) Reset() {
	*x = WxPayCallbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxpay_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxPayCallbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxPayCallbackReq) ProtoMessage() {}

func (x *WxPayCallbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_wxpay_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxPayCallbackReq.ProtoReflect.Descriptor instead.
func (*WxPayCallbackReq) Descriptor() ([]byte, []int) {
	return file_wxpay_proto_rawDescGZIP(), []int{1}
}

func (x *WxPayCallbackReq) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *WxPayCallbackReq) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *WxPayCallbackReq) GetDeviceInfo() string {
	if x != nil {
		return x.DeviceInfo
	}
	return ""
}

func (x *WxPayCallbackReq) GetNonceStr() string {
	if x != nil {
		return x.NonceStr
	}
	return ""
}

func (x *WxPayCallbackReq) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *WxPayCallbackReq) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *WxPayCallbackReq) GetResultCode() string {
	if x != nil {
		return x.ResultCode
	}
	return ""
}

func (x *WxPayCallbackReq) GetErrCode() string {
	if x != nil {
		return x.ErrCode
	}
	return ""
}

func (x *WxPayCallbackReq) GetErrCodeDes() string {
	if x != nil {
		return x.ErrCodeDes
	}
	return ""
}

func (x *WxPayCallbackReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WxPayCallbackReq) GetIsSubscribe() string {
	if x != nil {
		return x.IsSubscribe
	}
	return ""
}

func (x *WxPayCallbackReq) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *WxPayCallbackReq) GetBankType() string {
	if x != nil {
		return x.BankType
	}
	return ""
}

func (x *WxPayCallbackReq) GetTotalFee() int32 {
	if x != nil {
		return x.TotalFee
	}
	return 0
}

func (x *WxPayCallbackReq) GetSettlementTotalFee() int32 {
	if x != nil {
		return x.SettlementTotalFee
	}
	return 0
}

func (x *WxPayCallbackReq) GetFeeType() string {
	if x != nil {
		return x.FeeType
	}
	return ""
}

func (x *WxPayCallbackReq) GetCashFee() int32 {
	if x != nil {
		return x.CashFee
	}
	return 0
}

func (x *WxPayCallbackReq) GetCashFeeType() string {
	if x != nil {
		return x.CashFeeType
	}
	return ""
}

func (x *WxPayCallbackReq) GetCouponFee() int32 {
	if x != nil {
		return x.CouponFee
	}
	return 0
}

func (x *WxPayCallbackReq) GetCouponCount() int32 {
	if x != nil {
		return x.CouponCount
	}
	return 0
}

func (x *WxPayCallbackReq) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *WxPayCallbackReq) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *WxPayCallbackReq) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

func (x *WxPayCallbackReq) GetTimeEnd() string {
	if x != nil {
		return x.TimeEnd
	}
	return ""
}

func (x *WxPayCallbackReq) GetSubAppid() string {
	if x != nil {
		return x.SubAppid
	}
	return ""
}

func (x *WxPayCallbackReq) GetSubMchId() string {
	if x != nil {
		return x.SubMchId
	}
	return ""
}

func (x *WxPayCallbackReq) GetSubOpenid() string {
	if x != nil {
		return x.SubOpenid
	}
	return ""
}

func (x *WxPayCallbackReq) GetSubIsSubscribe() string {
	if x != nil {
		return x.SubIsSubscribe
	}
	return ""
}

func (x *WxPayCallbackReq) GetReturnCode() string {
	if x != nil {
		return x.ReturnCode
	}
	return ""
}

func (x *WxPayCallbackReq) GetReturnMsg() string {
	if x != nil {
		return x.ReturnMsg
	}
	return ""
}

type WxPayCallbackRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WxPayCallbackRsp) Reset() {
	*x = WxPayCallbackRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxpay_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxPayCallbackRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxPayCallbackRsp) ProtoMessage() {}

func (x *WxPayCallbackRsp) ProtoReflect() protoreflect.Message {
	mi := &file_wxpay_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxPayCallbackRsp.ProtoReflect.Descriptor instead.
func (*WxPayCallbackRsp) Descriptor() ([]byte, []int) {
	return file_wxpay_proto_rawDescGZIP(), []int{2}
}

var File_wxpay_proto protoreflect.FileDescriptor

var file_wxpay_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x77, 0x78, 0x70, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x66,
	0x75, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x77, 0x78, 0x70, 0x61, 0x79, 0x22, 0xab, 0x01, 0x0a,
	0x09, 0x57, 0x78, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x8e, 0x07, 0x0a, 0x10, 0x57,
	0x78, 0x50, 0x61, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x44, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x65,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x65,
	0x65, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x65,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x61, 0x73, 0x68, 0x46, 0x65, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x61,
	0x73, 0x68, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x73, 0x68, 0x46, 0x65, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x68,
	0x46, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x46, 0x65, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x41, 0x70, 0x70, 0x69, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x4d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x4d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x4f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x4f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x49, 0x73, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x75, 0x62, 0x49, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x73, 0x67, 0x22, 0x12, 0x0a, 0x10, 0x57,
	0x78, 0x50, 0x61, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x42,
	0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x75,
	0x6e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x66, 0x75, 0x6e, 0x73, 0x74, 0x61,
	0x72, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x77, 0x78, 0x70, 0x61, 0x79,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wxpay_proto_rawDescOnce sync.Once
	file_wxpay_proto_rawDescData = file_wxpay_proto_rawDesc
)

func file_wxpay_proto_rawDescGZIP() []byte {
	file_wxpay_proto_rawDescOnce.Do(func() {
		file_wxpay_proto_rawDescData = protoimpl.X.CompressGZIP(file_wxpay_proto_rawDescData)
	})
	return file_wxpay_proto_rawDescData
}

var file_wxpay_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_wxpay_proto_goTypes = []interface{}{
	(*WxPayment)(nil),        // 0: funstar.wxpay.WxPayment
	(*WxPayCallbackReq)(nil), // 1: funstar.wxpay.WxPayCallbackReq
	(*WxPayCallbackRsp)(nil), // 2: funstar.wxpay.WxPayCallbackRsp
}
var file_wxpay_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wxpay_proto_init() }
func file_wxpay_proto_init() {
	if File_wxpay_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wxpay_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxpay_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxPayCallbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxpay_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxPayCallbackRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wxpay_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wxpay_proto_goTypes,
		DependencyIndexes: file_wxpay_proto_depIdxs,
		MessageInfos:      file_wxpay_proto_msgTypes,
	}.Build()
	File_wxpay_proto = out.File
	file_wxpay_proto_rawDesc = nil
	file_wxpay_proto_goTypes = nil
	file_wxpay_proto_depIdxs = nil
}
