syntax = "proto3";
package funstar.server.order;
option go_package = "github.com/funstartech/funstar-proto/go/server/order";

enum OrderStatus {
  ORDER_STATUS_WAIT_PAY = 0; // 待支付
  ORDER_STATUS_FINISHED = 1; // 已完成
  ORDER_STATUS_CANCEL = 2; // 已取消
}

message OrderBasicInfo {
  uint64 id = 1;
  int64 create_time = 2;
  uint32 status = 3; // 订单状态 OrderStatus
  int32 total_price = 4; // (单位：分)
  string openid = 5;
}

message ItemBasic {
  string title = 1;
  string cover = 2;
  int32 price = 3;    // (单位：分)请求方无需填写
  int32 discount_price = 4; // (单位：分)请求方无需填写
}

message Collection {
  string cid = 1;
  uint32 count = 2;
  ItemBasic collection_basic = 3; // 赏基础信息
  repeated Product products = 4; // 命中商品列表
}

message Product {
  string pid = 1;
  uint32 count = 2;
  ItemBasic basic = 3;
}

message Coupon {
  string coupon_id = 1;
  uint32 count = 2;
}

enum OrderRes {
  ORDER_RES_OK = 0; // 订单状态符合预期
  ORDER_RES_NO_ENOUGH_COUNT = 1; // 部分商品数量不足
  ORDER_RES_HAS_INELIGIBLE_COUPON = 2; // 部分优惠券不可用

  ORDER_RES_NO_SALE = 100; // 订单内所有商品都不可出售了
}

message OrderInfo {
  OrderBasicInfo order_basic_info = 1; // 订单基础信息
  repeated Collection collection_list = 2;
  repeated Product product_list = 3;
  repeated Coupon coupon_list = 4;  // 使用的优惠券列表
}

message CreateOrderReq {
  repeated Collection collection_list = 1;
  repeated Product product_list = 2;
  repeated Coupon coupon_list = 3;  // 申请使用的优惠券列表
}

message CreateOrderRsp {
  OrderInfo order_info = 1;

  uint32 res = 20; // 下单结果 OrderRes
}

message PreviewOrderReq {
  repeated Collection collection_list = 1;
  repeated Product product_list = 2;
  repeated Coupon coupon_list = 3;  // 申请使用的优惠券列表
}

message PreviewOrderRsp {
  uint64 res = 1; // 同 OrderRes
  repeated Collection collection_list = 2;
  repeated Product product_list = 3;
  repeated Coupon coupon_list = 4;  // 可使用的优惠券列表
  int32 total_price = 5; // (单位：分)
}

message GetOrderInfoReq {
  uint64 order_id = 1;
}

message GetOrderInfoRsp {
  OrderInfo order_info = 1;
}

message GetUserOrderListReq {
  bytes cookie = 1;
}

message GetUserOrderListRsp {
  repeated OrderInfo order_info = 1;
  bytes cookie = 2;
  bool is_end = 3;
}

service OrderSvr {
  // 正式创建订单
  rpc CreateOrder (CreateOrderReq) returns (CreateOrderRsp);
  // 订单预览
  rpc PreviewOrder (PreviewOrderReq) returns (PreviewOrderRsp);
  // 查询订单信息
  rpc GetOrderInfo (GetOrderInfoReq) returns (GetOrderInfoRsp);
  // 查询用户指定序号之前指定数量的订单
  rpc GetUserOrderList (GetUserOrderListReq) returns (GetUserOrderListRsp);
}
