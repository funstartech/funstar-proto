syntax = "proto3";
package funstar.server.order;
option go_package = "github.com/funstartech/funstar-proto/go/server/order";

import "wxpay.proto";
import "common.proto";

enum OrderStatus {
  ORDER_STATUS_WAIT_PAY = 0; // 待支付
  ORDER_STATUS_FINISHED = 1; // 已完成
  ORDER_STATUS_CANCEL = 2; // 已取消
}

message OrderBasic {
  uint64 id = 1;
  int64 create_time = 2;
  uint32 status = 3; // 订单状态 OrderStatus
  int32 total_price = 4; // (单位：分)
  string openid = 5;
  string title = 6;
  string c_cover = 7;
  string p_cover = 8; // 优先使用p_cover字段，p_cover为空或者不能访问，则用c_cover，将来支持翻转动画时，从c_cover翻转为p_cover
  uint32 count = 9;
  string pids = 10;
  string share_key = 11;
}

message OrderDetail {
  repeated funstar.common.Collection collections = 1;
  repeated funstar.common.Product products = 2;
  repeated funstar.common.Coupon coupons = 3;

}

enum OrderRes {
  ORDER_RES_OK = 0; // 订单状态符合预期
  ORDER_RES_NO_ENOUGH_COUNT = 1; // 部分商品数量不足
  ORDER_RES_HAS_INELIGIBLE_COUPON = 2; // 部分优惠券不可用

  ORDER_RES_NO_SALE = 100; // 订单内所有商品都不可出售了
}

message OrderInfo {
  OrderBasic basic = 1;
  OrderDetail detail = 2;
}

message CreateOrderReq {
  OrderDetail detail = 1;
  string share_key = 2;
}

message CreateOrderRsp {
  OrderInfo order_info = 1;
  funstar.wxpay.WxPayment payment = 2;

  uint32 res = 20; // 下单结果 OrderRes
}

message GetOrderInfoReq {
  uint64 order_id = 1;
}

message GetOrderInfoRsp {
  OrderInfo order_info = 1;
}

enum FetchOrderType {
  FETCH_ORDER_TYPE_UNKNOWN = 0;
  FETCH_ORDER_TYPE_COMPLETED = 1; // 已完成
  FETCH_ORDER_TYPE_UNCOMPLETED = 2; // 未完成
}

message GetUserOrdersReq {
  uint32 type = 1; // FetchOrderType
  bytes cookie = 2;
}

message GetUserOrdersRsp {
  repeated OrderBasic orders = 1;
  bytes cookie = 2;
  bool is_end = 3;
}

enum CancelRes {
  CANCEL_RES_OK = 0;
  CANCEL_RES_NO_MATCH_ORDER = 1; // 没有匹配订单（openid不匹配或者找不到订单号或者状态为已完成不可取消）
}

message CancelOrderReq {
  uint64 order_id = 1;
}

message CancelOrderRsp {
  uint32 res = 1; // CancelRes
}

message OrderFinishHistory {
  string openid = 1;
  string pid = 2;
  uint32 level = 3;
  int64 ts = 4;
}

message GetOrderFinishHistoryReq {
  string cid = 1;
  bytes cookie = 2;
}

message GetOrderFinishHistoryRsp {
  repeated OrderFinishHistory history = 1;
  bytes cookie = 2;
  bool is_end = 3;
}

service OrderSvr {
  // 创建订单
  rpc CreateOrder (CreateOrderReq) returns (CreateOrderRsp);
  // 查询订单信息
  rpc GetOrderInfo (GetOrderInfoReq) returns (GetOrderInfoRsp);
  // 查询用户订单
  rpc GetUserOrders (GetUserOrdersReq) returns (GetUserOrdersRsp);
  // 取消订单
  rpc CancelOrder (CancelOrderReq) returns (CancelOrderRsp);
  // 微信支付付款回调
  rpc WxPayCallback (funstar.wxpay.WxPayCallbackReq) returns (funstar.wxpay.WxPayCallbackRsp);
  // 获取订单完成记录
  rpc GetOrderFinishHistory (GetOrderFinishHistoryReq) returns (GetOrderFinishHistoryRsp);
}
