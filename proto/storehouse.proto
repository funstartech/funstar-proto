syntax = "proto3";
package funstar.server.storehouse;
option go_package = "github.com/funstartech/funstar-proto/go/server/storehouse";

import "wxpay.proto";
import "common.proto";
import "delivery.proto";

enum StoreProductStatus {
  STORE_STATUS_UNPICK_UP = 0; // 未提货
  STORE_STATUS_PICK_UP = 1; //已提货
}

message StoreProduct {
  uint64 store_id = 1;
  funstar.common.Product product = 2;
  int64 update_ts = 3;
}

message GetUserStoresReq {
  bytes cookie = 1;
}

message GetUserStoresRsp {
  repeated StoreProduct stores = 1;
  bytes cookie = 2;
  bool is_end = 3;
}

enum PickUpOrderStatus {
  PICKUP_ORDER_STATUS_WAIT_PAY = 0; // 待支付
  PICKUP_ORDER_STATUS_ORDER_PLACED = 1; // 待发货
  PICKUP_ORDER_STATUS_CANCEL = 2; // 已取消
  PICKUP_ORDER_STATUS_DELIVERY = 3; // 已发货
  PICKUP_ORDER_STATUS_DELIVERED = 4; // 已送达
}

message PickUpOrderInfo {
  PickUpOrderBasic basic = 1;
  PickUpOrderDetail detail = 2;
}

message PickUpOrderBasic {
  uint64 id = 1;
  int64 create_time = 2;
  int64 expire_time = 3;
  uint32 status = 4; // 订单状态 PickUpOrderStatus
  int32 total_price = 5; // (单位：分)
  string openid = 6;
  string store_ids = 7;
  string pids = 8; // 商品列表
  uint32 count = 9; // 总数量
  string wx_transaction_id = 10;

  string receiver = 20; // 收货人
  string phone = 21; // 手机号
  string district = 22; // 区域
  string address = 23; // 详细地址

  string shipping_method = 50; // 物流公司
  string shipping_number = 51 ;// 物流单号
}

message PickUpOrderDetail {
  repeated funstar.common.Product products = 1;
}

message CreatePickUpOrderReq {
  repeated uint64 store_ids = 1;
  uint64 address_id = 2;
}

message CreatePickUpOrderRsp {
  PickUpOrderInfo order_info = 1;
  funstar.wxpay.WxPayment payment = 2;
  bool free_shipping = 3;
}

message GetUserPickUpOrdersReq {
  bytes cookie = 1;
}

message GetUserPickUpOrdersRsp {
  repeated PickUpOrderInfo orders = 1;
  bytes cookie = 2;
  bool is_end = 3;
}

enum CancelRes {
  CANCEL_RES_OK = 0;
  CANCEL_RES_NO_MATCH_ORDER = 1; // 没有匹配订单（openid不匹配或者找不到订单号或者状态为已完成不可取消）
}

message CancelPickUpOrderReq {
  uint64 pickup_id = 1;
}

message CancelPickUpOrderRsp {
  uint32 res = 1; // CancelRes
}

message GetDeliveryInfoReq {
  uint64 pickup_id = 1;
}

message GetDeliveryInfoRsp {
  repeated funstar.delivery.PickUpDeliveryInfo infos = 1;
}

service StorehouseSvr {
  // 拉取用户仓库
  rpc GetUserStores (GetUserStoresReq) returns (GetUserStoresRsp);
  // 创建提货单
  rpc CreatePickUpOrder (CreatePickUpOrderReq) returns (CreatePickUpOrderRsp);
  // 查询用户提货单
  rpc GetUserPickUpOrders (GetUserPickUpOrdersReq) returns (GetUserPickUpOrdersRsp);
  // 取消提货单
  rpc CancelPickUpOrder (CancelPickUpOrderReq) returns (CancelPickUpOrderRsp);
  // 查询物流信息
  rpc GetDeliveryInfo (GetDeliveryInfoReq) returns (GetDeliveryInfoRsp);
  // 微信支付付款回调
  rpc WxPayCallback (funstar.wxpay.WxPayCallbackReq) returns (funstar.wxpay.WxPayCallbackRsp);
}
